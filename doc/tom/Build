#!/bin/bash

# (C) Copyright Vesa Karvonen 2004.
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.)

doc=tom
tmpDir=.tmp

function ebnf-to-ltx {
    sed -e                               's#{#\\{#g'                 \
        -e                               's#}#\\}#g'                 \
        -e     's#^[ \t]*\([0-9A-Za-z{},\\]\)#\&\&\1#g'              \
        -e                             's#::=#\&\$::=\$\&#g'         \
        -e                            's#^ *|#\&\$|\$\&#g'           \
        -e                        's#^[ \t]*$#\&\&\&\\emph{#g'       \
        -e                          's# *;; *#\&\\emph{#g'           \
        -e                   's#-\([a-z]\+>\)#}\$-\$\\mathrm{\1#g'   \
        -e                               's#<#\$\\langle\\mathrm{#g' \
        -e                               's#>#}\\rangle\$#g'         \
        -e                               's#+#\$^+\$#g'              \
        -e                              's#\*#\$^\*\$#g'             \
        -e                               's#?#\$^?\$#g'              \
        -e                               's#(#\\code{(}#g'           \
        -e                               's#)#\\code{)}#g'           \
        -e                         's#\\{,\\}#\$^{(,)}\$#g'          \
        -e                              's#, #\\code{,} #g'          \
        -e   "s#\([^\`]\)\`\\([^\`{}']\\+\\)'#\\1\\\\code{\\2}#g"    \
        -e   "s#\([^\`]\)\`\\([^\`{}']\\+\\)'#\\1\\\\code{\\2}#g"    \
        -e             's#_\([0-9A-Za-z-]\+\)#_\\mathit{\1}#g'       \
        -e                               's#$#}\\\\#g'
}

function cpp-to-ltx {
    sed -e                          's:^// (C) Copyright Vesa Karvonen 2004.$::g'                      \
        -e 's:^// Distributed under the Boost Software License, Version 1.0.$::g'                      \
        -e                           's:^// (See accompanying file LICENSE.)$::g'                      \
        -e                                                     's:^#[ \t]\+.*::g'                      \
        -e                                                         's:^#if 0$:\\begin{verbatim}:g'     \
        -e                                                     's:^#endif//0$:\\end{verbatim}:g'       \
        -e                                                  's:^// ## \(.*\)$:\\section{\1}:g'         \
        -e                                                 's:^// ### \(.*\)$:\\subsection\*{\1}:g'    \
        -e                                                's:^// #### \(.*\)$:\\subsubsection\*{\1}:g' \
        -e                                                            's:^//<:\\begin{verbatim}:g'     \
        -e                                                            's:^//>:\\end{verbatim}:g'       \
        -e                                 "s:\([^\`]\)\`\\([^\`\{\}']\\+\\)':\\1\\\\url{\\2}:g"       \
        -e                                     "s:\([^\`]\)\`\\([^\`']\\+\\)':\\1\\\\verb'\\2':g"      \
        -e                                                            's:^// ::g'                      \
        -e                                                            's:^//$::g'
}

mkdir -p "$tmpDir"                                                                                                 && \
    cp *.ltx "$tmpDir/"                                                                                            && \
    for f in *.ebnf ; do cat "$f" | ebnf-to-ltx > "$tmpDir/$(echo "$f" | sed 's#\.ebnf$#\.ltx#g')" ; done          && \
    cat "../../example/array_ops.c"                                     | cpp-to-ltx > "$tmpDir/array-ops.ltx"     && \
    cat "../../example/average.h" "../../example/average.c"             | cpp-to-ltx > "$tmpDir/average.ltx"       && \
    cat "../../example/binary.h" "../../example/binary.c"               | cpp-to-ltx > "$tmpDir/binary.ltx"        && \
    cat "../../example/bottles.c"                                       | cpp-to-ltx > "$tmpDir/bottles.ltx"       && \
    cat "../../example/catch_builtin.cpp"                               | cpp-to-ltx > "$tmpDir/catch-builtin.ltx" && \
    cat "../../example/duffs_device.c"                                  | cpp-to-ltx > "$tmpDir/duffs-device.ltx"  && \
    cat "../../example/exp_delay.c"                                     | cpp-to-ltx > "$tmpDir/exp-delay.ltx"     && \
    cat "../../example/fibonacci.c"                                     | cpp-to-ltx > "$tmpDir/fibonacci.ltx"     && \
    cat "../../example/is_function.hpp" "../../example/is_function.cpp" | cpp-to-ltx > "$tmpDir/is-function.ltx"   && \
    cat "../../example/is_integral.hpp" "../../example/is_integral.cpp" | cpp-to-ltx > "$tmpDir/is-integral.ltx"   && \
    cat "../../example/streams.c"                                       | cpp-to-ltx > "$tmpDir/streams.ltx"       && \
    cat "../../example/typelist.hpp" "../../example/typelist.cpp"       | cpp-to-ltx > "$tmpDir/typelist.ltx"      && \
    cd "$tmpDir"                                                                                                   && \
    latex -interaction=batchmode "$doc.ltx"                                                                        && \
    bibtex -terse "$doc"                                                                                           && \
    latex -interaction=batchmode "$doc.ltx"                                                                        && \
    latex -interaction=batchmode "$doc.ltx"                                                                        && \
    echo "DVI done"                                                                                                && \
    dvips -q -o "../$doc.ps" "$doc.dvi"
